
server.port=8080
#开启spring的aop配置,简单明了，不需要多配置其他的配置或注解
spring.aop.auto=true

logging.level.root=INFO
logging.config=classpath:logback-spring.xml

spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#监听生产者是否发送消息到exchange和queue
spring.rabbitmq.publisher-confirms=true
#消息没有正确到达队列时触发回调，如果正确到达队列不执行
spring.rabbitmq.publisher-returns=true

#这个配置有三种配置方式，分别为NONE、MANUAL、AUTO。

#1. 如果消息成功被消费（成功的意思是在消费的过程中没有抛出异常），则自动确认
#2. 当抛出 AmqpRejectAndDontRequeueException 异常的时候，则消息会被拒绝，且 requeue = false（不重新入队列）
#3. 当抛出 ImmediateAcknowledgeAmqpException 异常，则消费者会被确认
#4. 其他的异常，则消息会被拒绝，且 requeue = true，此时会发生死循环，可以通过 setDefaultRequeueRejected（默认是true）去设置抛弃消息
#spring.rabbitmq.listener.simple.acknowledge-mode=auto

#全局开启ACK
spring.rabbitmq.listener.simple.acknowledge-mode=manual

# 消费者每次从队列获取的消息数量。此属性当不设置时为：轮询分发，设置为1为：公平分发
spring.rabbitmq.listener.simple.prefetch=1


## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=5000